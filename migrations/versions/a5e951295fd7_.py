"""empty message

Revision ID: a5e951295fd7
Revises: 
Create Date: 2023-04-05 13:26:18.603131

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a5e951295fd7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course_category',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('catogory_name', sa.String(length=250), nullable=False),
    sa.Column('status', sa.String(length=25), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_grant_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('participant_id', postgresql.UUID(), nullable=True),
    sa.Column('funder_id', postgresql.UUID(), nullable=True),
    sa.Column('status', sa.String(length=25), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institution_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('company_name', sa.String(length=250), nullable=False),
    sa.Column('status', sa.String(length=25), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant_profile',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('participant_id', postgresql.UUID(), nullable=True),
    sa.Column('participant_user_id', postgresql.UUID(), nullable=True),
    sa.Column('highest_education', sa.String(), nullable=True),
    sa.Column('english_speaking_level', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('other_languages', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('current_skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('interested_course', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('preferred_course_language', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('current_employment_status', sa.Boolean(), nullable=True),
    sa.Column('current_employment_details', sa.TEXT(), nullable=True),
    sa.Column('employment_start_date', sa.Date(), nullable=True),
    sa.Column('employment_end_date', sa.Date(), nullable=True),
    sa.Column('preferred_job_location_state', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('preferred_job_location_city', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('preferred_employment_type', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('preferred_work_place_type', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('preferred_job_role', postgresql.ARRAY(sa.String()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('resume_builder',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('email', sa.String(length=15), nullable=True),
    sa.Column('mobile', sa.String(length=5), nullable=True),
    sa.Column('current_address', sa.TEXT(), nullable=True),
    sa.Column('education_qualification', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('work_experience', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('certification', postgresql.ARRAY(postgresql.UUID()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('course_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('desctiption', sa.TEXT(), nullable=True),
    sa.Column('status', sa.String(length=25), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('original_price', sa.String(length=50), nullable=True),
    sa.Column('offer_price', sa.String(length=50), nullable=True),
    sa.Column('category_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('partner_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('language', sa.String(length=250), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('number_of_modules', sa.Integer(), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['course_category.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['partner_id'], ['course_category.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_score',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('participant_profile_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['participant_profile_id'], ['participant_profile.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('course_module_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('module_name', sa.String(length=250), nullable=False),
    sa.Column('module_order', sa.Integer(), nullable=True),
    sa.Column('course', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('status', sa.String(length=25), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['course'], ['course_master.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_content_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content_type', sa.String(length=250), nullable=True),
    sa.Column('content_order', sa.Integer(), nullable=True),
    sa.Column('course', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('status', sa.String(length=25), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['course'], ['course_module_master.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('course_content_master')
    op.drop_table('course_module_master')
    op.drop_table('profile_score')
    op.drop_table('course_master')
    op.drop_table('resume_builder')
    op.drop_table('participant_profile')
    op.drop_table('institution_master')
    op.drop_table('course_grant_master')
    op.drop_table('course_category')
    # ### end Alembic commands ###
